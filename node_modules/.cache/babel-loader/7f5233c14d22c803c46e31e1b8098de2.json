{"ast":null,"code":"var _jsxFileName = \"/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Final_Project/Frontend/pipeline-frontend/src/adminConsole.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./styles.css\";\nimport Button from \"@mui/material/Button\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminConsole() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const [graderMessage, setGraderMessage] = useState(\"\");\n  const [graders, setGraders] = useState();\n  const [action1, setAction1] = useState();\n  const theme = createTheme({\n    status: {\n      danger: \"#e53e3e\"\n    },\n    palette: {\n      primary: {\n        main: \"#ff8a00\"\n      },\n      neutral: {\n        main: \"#ffffff\",\n        contrastText: \"#ff8a00\"\n      }\n    }\n  });\n  useEffect(() => {\n    async function checkUser(value) {\n      await fetch('http://127.0.0.1:5000/check_admin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: value.email\n        })\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        if (data.found === false) {\n          navigate('/admin-login');\n        }\n      });\n    }\n    ;\n    if (state === null) {\n      navigate('/admin-login');\n    } else {\n      checkUser(state);\n    }\n    async function fetchGraderData() {\n      await fetch(\"http://127.0.0.1:5000/get_graders\", {\n        method: 'GET'\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        const graders = [];\n        for (g in data) {\n          graders.push(g.email);\n        }\n        setGraders(graders);\n      }).catch(err => {\n        console.log(err.message);\n      });\n    }\n    fetchGraderData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            display: \"flex\"\n          },\n          variant: \"contained\",\n          color: \"neutral\",\n          onClick: () => {\n            navigate('/');\n          },\n          className: \"navHome\",\n          children: \"Return Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            display: \"flex\"\n          },\n          children: \"PlexTech Administrator Console\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\",\n          action1: \"\"\n        },\n        onSubmit: async values => {\n          if (values.action === \"add\") {\n            await fetch('http://127.0.0.1:5000/add_grader', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                email: values.email\n              })\n            }).then(() => {\n              setGraderMessage(\"Successfully added grader \" + values.email + \".\");\n            });\n          } else if (values.action === \"remove\") {\n            await fetch('http://127.0.0.1:5000/remove_grader', {\n              method: 'DELETE',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                email: values.email\n              })\n            }).then(() => {\n              setGraderMessage(\"Successfully removed grader \" + values.email + \".\");\n            });\n          }\n        },\n        children: formik => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-console\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Current Graders:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: graders\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: formik.handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"lastName\",\n                children: \"Grader Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"email\",\n                type: \"text\",\n                ...formik.getFieldProps('email')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"rating1\",\n                children: \"What do you want to do with this grader?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"dropbtn\",\n                name: \"action1\",\n                value: action1,\n                onChange: event => {\n                  setAction1(event.target.value);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  disabled: true,\n                  children: \"Select an action:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"add\",\n                  children: \"add grader\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"remove\",\n                  children: \"remove grader\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"contained\",\n                  color: \"neutral\",\n                  fontWeight: \"Bold\",\n                  style: {\n                    \"marginBottom\": \"50px\"\n                  },\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(AdminConsole, \"ww10UiyOk3pe3hRbOZCSNpfVOJk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = AdminConsole;\nexport default AdminConsole;\nvar _c;\n$RefreshReg$(_c, \"AdminConsole\");","map":{"version":3,"names":["React","useState","useEffect","Formik","Yup","Button","createTheme","ThemeProvider","useNavigate","useLocation","AdminConsole","state","navigate","graderMessage","setGraderMessage","graders","setGraders","action1","setAction1","theme","status","danger","palette","primary","main","neutral","contrastText","checkUser","value","fetch","method","headers","body","JSON","stringify","email","then","response","json","data","found","fetchGraderData","g","push","catch","err","console","log","message","display","values","action","formik","handleSubmit","getFieldProps","event","target"],"sources":["/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Final_Project/Frontend/pipeline-frontend/src/adminConsole.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./styles.css\";\nimport Button from \"@mui/material/Button\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nfunction AdminConsole() {\n\n    const { state } = useLocation();\n    const navigate = useNavigate();\n    const [graderMessage, setGraderMessage] = useState(\"\");\n    const [graders, setGraders] = useState();\n    const [action1, setAction1] = useState();\n\n    const theme = createTheme({\n        status: {\n            danger: \"#e53e3e\",\n        },\n        palette: {\n            primary: {\n                main: \"#ff8a00\",\n            },\n            neutral: {\n                main: \"#ffffff\",\n                contrastText: \"#ff8a00\",\n            },\n        },\n    });\n\n    useEffect(() => {\n        async function checkUser(value) {\n            await fetch('http://127.0.0.1:5000/check_admin', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    email: value.email,\n                })\n            })\n                .then((response) => {\n                    return (response.json());\n                })\n                .then((data) => {\n                    if (data.found === false) {\n                        navigate('/admin-login');\n                    }\n                });\n        };\n\n        if (state === null) {\n            navigate('/admin-login');\n        } else {\n            checkUser(state);\n        }\n\n        async function fetchGraderData() {\n            await fetch(\"http://127.0.0.1:5000/get_graders\", {\n                method: 'GET',\n            })\n                .then((response) => {\n                    return (response.json());\n                })\n                .then((data) => {\n                    const graders = [];\n                    for (g in data) {\n                        graders.push(g.email);\n                    }\n                    setGraders(graders);\n                })\n                .catch((err) => {\n                    console.log(err.message);\n                });\n        }\n        fetchGraderData();\n    }, []);\n\n    return (\n        <>\n            <ThemeProvider theme={theme}>\n                <span>\n                    <Button\n                        style={{ display: \"flex\" }}\n                        variant=\"contained\"\n                        color=\"neutral\"\n                        onClick={() => { navigate('/') }}\n                        className=\"navHome\"\n                    >Return Home</Button>\n\n                    <h1 style={{ display: \"flex\" }}>\n                        PlexTech Administrator Console\n                    </h1>\n                </span>\n\n                {/* Grader Control */}\n                <Formik\n                    initialValues={{\n                        email: \"\",\n                        action1: \"\",\n                    }}\n                    onSubmit={async (values) => {\n                        if (values.action === \"add\") {\n                            await fetch('http://127.0.0.1:5000/add_grader', {\n                                method: 'POST',\n                                headers: { 'Content-Type': 'application/json' },\n                                body: JSON.stringify({\n                                    email: values.email,\n                                })\n                            }).then(() => {\n                                setGraderMessage(\"Successfully added grader \" + values.email + \".\")\n                            });\n                        } else if (values.action === \"remove\") {\n                            await fetch('http://127.0.0.1:5000/remove_grader', {\n                                method: 'DELETE',\n                                headers: { 'Content-Type': 'application/json' },\n                                body: JSON.stringify({\n                                    email: values.email,\n                                })\n                            }).then(() => {\n                                setGraderMessage(\"Successfully removed grader \" + values.email + \".\")\n                            });\n                        }\n                    }}\n                >\n                    {formik => (\n                        <div className='admin-console'>\n\n                            <div>\n                                <h2>Current Graders:</h2>\n                                <p>{graders}</p>\n\n                                <form onSubmit={formik.handleSubmit}>\n                                    <label htmlFor=\"lastName\">Grader Email</label>\n                                    <input\n                                        id=\"email\"\n                                        type=\"text\"\n                                        {...formik.getFieldProps('email')} />\n\n                                    <label htmlFor=\"rating1\">\n                                        What do you want to do with this grader?\n                                    </label>\n\n                                    <select className=\"dropbtn\" name=\"action1\" value={action1} onChange={(event) => { setAction1(event.target.value) }}>\n                                        <option value=\"\" disabled={true}>Select an action:</option>\n                                        <option value={\"add\"}>add grader</option>\n                                        <option value={\"remove\"}>remove grader</option>\n                                    </select>\n                                    <div>\n                                        <Button type=\"submit\"\n                                            variant=\"contained\"\n                                            color=\"neutral\"\n                                            fontWeight=\"Bold\"\n                                            style={{ \"marginBottom\": \"50px\" }}\n                                        >Submit</Button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    )}\n                </Formik>\n            </ThemeProvider>\n        </>\n    )\n}\n\nexport default AdminConsole;"],"mappings":"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"},"metadata":{},"sourceType":"module"}