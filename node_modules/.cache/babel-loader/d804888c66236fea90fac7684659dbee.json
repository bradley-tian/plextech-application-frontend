{"ast":null,"code":"var _jsxFileName = \"/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Final_Project/Frontend/pipeline-frontend/src/graderForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./styles.css\";\nimport Button from \"@mui/material/Button\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport SelectInput from \"@mui/material/Select/SelectInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  status: {\n    danger: \"#e53e3e\"\n  },\n  palette: {\n    primary: {\n      main: \"#ff8a00\"\n    },\n    neutral: {\n      main: \"#ffffff\",\n      contrastText: \"#ff8a00\"\n    }\n  }\n});\nconst InvoiceForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const [userInfo, setData] = useState({});\n  const navToHome = () => {\n    navigate(\"/\");\n  };\n  useEffect(() => {\n    async function fetchData() {\n      await fetch(\"http://127.0.0.1:5000/get_applicant\", {\n        method: 'GET'\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        data = data[0];\n        setData({\n          timestamp: data.time_created,\n          firstName: data.first_name,\n          lastName: data.last_name\n        });\n      }).catch(err => {\n        console.log(err.message);\n      });\n    }\n    fetchData();\n  }, []);\n  useEffect(() => {\n    console.log(userInfo);\n    console.log(userInfo.firstName);\n  }, [userInfo]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          display: \"flex\"\n        },\n        variant: \"contained\",\n        color: \"neutral\",\n        onClick: navToHome,\n        className: \"navHome\",\n        children: \"Return Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"First Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userInfo.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(InvoiceForm, \"HuHzzi3IwSJCqG+uTRma2MD+tTw=\", false, function () {\n  return [useNavigate];\n});\n_c = InvoiceForm;\nexport default InvoiceForm;\nvar _c;\n$RefreshReg$(_c, \"InvoiceForm\");","map":{"version":3,"names":["React","useState","useEffect","Formik","Yup","Button","createTheme","ThemeProvider","useNavigate","SelectInput","theme","status","danger","palette","primary","main","neutral","contrastText","InvoiceForm","navigate","userInfo","setData","navToHome","fetchData","fetch","method","then","response","json","data","timestamp","time_created","firstName","first_name","lastName","last_name","catch","err","console","log","message","display"],"sources":["/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Final_Project/Frontend/pipeline-frontend/src/graderForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./styles.css\";\nimport Button from \"@mui/material/Button\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport SelectInput from \"@mui/material/Select/SelectInput\";\n\nconst theme = createTheme({\n  status: {\n    danger: \"#e53e3e\",\n  },\n  palette: {\n    primary: {\n      main: \"#ff8a00\",\n    },\n    neutral: {\n      main: \"#ffffff\",\n      contrastText: \"#ff8a00\",\n    },\n  },\n});\n\nconst InvoiceForm = () => {\n  const navigate = useNavigate();\n  const [userInfo, setData] = useState({});\n\n  const navToHome = () => {\n    navigate(\"/\");\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      await fetch(\"http://127.0.0.1:5000/get_applicant\", {\n        method: 'GET',\n      })\n        .then((response) => {\n          return (response.json());\n        })\n        .then((data) => {\n          data = data[0]\n          setData({\n            timestamp: data.time_created,\n            firstName: data.first_name,\n            lastName: data.last_name,\n          });\n        })\n        .catch((err) => {\n          console.log(err.message);\n        });\n    }\n\n    fetchData();\n\n  }, []);\n\n  useEffect(() => {\n    console.log(userInfo);\n    console.log(userInfo.firstName)\n  }, [userInfo]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        <Button\n          style={{ display: \"flex\" }}\n          variant=\"contained\"\n          color=\"neutral\"\n          onClick={navToHome}\n          className=\"navHome\"\n        >Return Home</Button>\n      </div>\n      <div>\n        <h3>First Name:</h3>\n        <p>{userInfo.firstName}</p>\n      </div>\n      {/* <Formik\n        initialValues={{\n          timestamp: userInfo.timestamp,\n          firstName: userInfo.firstName,\n          lastName: userInfo.lastName,\n          resume: userInfo.resume,\n          essay1: userInfo.essay1,\n          essay2: userInfo.essay2,\n          essay3: userInfo.essay3,\n          essay4: userInfo.essay4,\n        }}\n        validationSchema={Yup.object({\n          firstName: Yup.string().required(\"Required\"),\n          lastName: Yup.string().required(\"Required\"),\n        })}\n        onSubmit={async (values) => {\n          fetch(\"<ENTER API ENDPOINT HERE>\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              first_name: values.firstName,\n              last_name: values.lastName,\n              time_created: values.timestamp,\n            }),\n          });\n        }}\n      >\n        {(formik) => (\n          <div>\n            <span>\n              <Button\n                style={{ display: \"flex\" }}\n                variant=\"contained\"\n                color=\"neutral\"\n                onClick={navToHome}\n                className=\"navHome\"\n              >\n                Return Home\n              </Button>\n              <h1 style={{ display: \"flex\" }}>\n                PlexTech Grader Portal - Spring 2023\n              </h1>\n              <br />\n            </span>\n            <div>\n              <h4>\n                For each applicant, please provide a rating and leave thorough\n                comments for every essay question.\n              </h4>\n              <form onSubmit={formik.handleSubmit}>\n                <label htmlFor=\"timestamp\">Timestamp</label>\n                <input\n                  id=\"timestamp\"\n                  name=\"timestamp\"\n                  type=\"text\"\n                  readOnly\n                  value={formik.values.timestamp}\n                />\n\n                <label htmlFor=\"firstName\">First Name</label>\n                <input\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  type=\"text\"\n                  readOnly\n                  value={formik.values.firstName}\n                />\n\n                <label htmlFor=\"lastName\">Last Name</label>\n                <input\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  type=\"text\"\n                  readOnly\n                  value={formik.values.lastName}\n                />\n\n                <label htmlFor=\"resume\">Resume Upload</label>\n                <input\n                  id=\"resume\"\n                  name=\"resume\"\n                  type=\"text\"\n                  readOnly\n                  value={formik.values.resume}\n                />\n\n                <br></br>\n                <br></br>\n\n                <div className=\"horizontal-box\">\n                  <div>\n                    <label htmlFor=\"essay1\">\n                      Long Answer: Class and EC Commitments\n                    </label>\n                    <input\n                      className=\"bigText\"\n                      id=\"essay1\"\n                      name=\"essay1\"\n                      type=\"text\"\n                      readOnly\n                      value={formik.values.essay1}\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"comment1\">Comment</label>\n\n                    <div>\n                      <input\n                        className=\"commentHeight\"\n                        id=\"comment1\"\n                        type=\"text\"\n                        {...formik.getFieldProps(\"comment1\")}\n                      />\n\n                      <div>\n                        <label htmlFor=\"rating1\">\n                          Choose a rating for this essay question:\n                        </label>\n                        <select className=\"dropbtn\" name=\"rating1\" id=\"rating1\">\n                          <option value=\"one\">1</option>\n                          <option value=\"two\">2</option>\n                          <option value=\"three\">3</option>\n                          <option value=\"four\">4</option>\n                          <option value=\"five\">5</option>\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <br></br>\n                <br></br>\n\n                <div className=\"horizontal-box\">\n                  <div>\n                    <label htmlFor=\"essay2\">\n                      Long Answer: Essay Question 1\n                    </label>\n\n                    <input\n                      className=\"bigText\"\n                      id=\"essay2\"\n                      name=\"essay2\"\n                      type=\"text\"\n                      readOnly\n                      value={formik.values.essay2}\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"comment2\">Comment</label>\n                    <input\n                      className=\"commentHeight\"\n                      id=\"comment2\"\n                      type=\"text\"\n                      {...formik.getFieldProps(\"comment2\")}\n                    />\n\n                    <div>\n                      <label htmlFor=\"rating1\">\n                        Choose a rating for this essay question:\n                      </label>\n                      <select className=\"dropbtn\" name=\"rating1\" id=\"rating1\">\n                        <option value=\"one\">1</option>\n                        <option value=\"two\">2</option>\n                        <option value=\"three\">3</option>\n                        <option value=\"four\">4</option>\n                        <option value=\"five\">5</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <br></br>\n                <br></br>\n\n                <div className=\"horizontal-box\">\n                  <div>\n                    <label htmlFor=\"essay3\">\n                      Long Answer: Essay Question 2\n                    </label>\n                    <input\n                      className=\"bigText\"\n                      id=\"essay3\"\n                      name=\"essay3\"\n                      type=\"text\"\n                      readOnly\n                      value={formik.values.essay3}\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"comment3\">Comment</label>\n                    <input\n                      className=\"commentHeight\"\n                      id=\"comment3\"\n                      type=\"text\"\n                      {...formik.getFieldProps(\"comment3\")}\n                    />\n\n                    <div>\n                      <label htmlFor=\"rating1\">\n                        Choose a rating for this essay question:\n                      </label>\n                      <select className=\"dropbtn\" name=\"rating1\" id=\"rating1\">\n                        <option value=\"one\">1</option>\n                        <option value=\"two\">2</option>\n                        <option value=\"three\">3</option>\n                        <option value=\"four\">4</option>\n                        <option value=\"five\">5</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n\n                <br></br>\n                <br></br>\n\n                <div className=\"horizontal-box\">\n                  <div>\n                    <label htmlFor=\"essay4\">\n                      Long Answer: Essay Question 3\n                    </label>\n                    <input\n                      className=\"bigText\"\n                      id=\"essay4\"\n                      name=\"essay4\"\n                      type=\"text\"\n                      readOnly\n                      value={formik.values.essay4}\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"comment4\">Comment</label>\n                    <input\n                      className=\"commentHeight\"\n                      id=\"comment4\"\n                      type=\"text\"\n                      {...formik.getFieldProps(\"comment4\")}\n                    />\n\n                    <div>\n                      <label htmlFor=\"rating1\">\n                        Choose a rating for this essay question:\n                      </label>\n                      <select className=\"dropbtn\" name=\"rating1\" id=\"rating1\">\n                        <option value=\"one\">1</option>\n                        <option value=\"two\">2</option>\n                        <option value=\"three\">3</option>\n                        <option value=\"four\">4</option>\n                        <option value=\"five\">5</option>\n                      </select>\n                    </div>\n                  </div>\n                  x\n                </div>\n\n                <div>\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"neutral\"\n                    fontWeight=\"Bold\"\n                    style={{ marginBottom: \"50px\" }}\n                  >\n                    Submit\n                  </Button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n      </Formik> */}\n    </ThemeProvider>\n  );\n};\n\nexport default InvoiceForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAO,cAAc;AACrB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,kCAAkC;AAAC;AAE3D,MAAMC,KAAK,GAAGJ,WAAW,CAAC;EACxBK,MAAM,EAAE;IACNC,MAAM,EAAE;EACV,CAAC;EACDC,OAAO,EAAE;IACPC,OAAO,EAAE;MACPC,IAAI,EAAE;IACR,CAAC;IACDC,OAAO,EAAE;MACPD,IAAI,EAAE,SAAS;MACfE,YAAY,EAAE;IAChB;EACF;AACF,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAMC,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAM,CAACY,QAAQ,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExC,MAAMqB,SAAS,GAAG,MAAM;IACtBH,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd,eAAeqB,SAAS,GAAG;MACzB,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QACjDC,MAAM,EAAE;MACV,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAK;QAClB,OAAQA,QAAQ,CAACC,IAAI,EAAE;MACzB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;QACdA,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC;QACdR,OAAO,CAAC;UACNS,SAAS,EAAED,IAAI,CAACE,YAAY;UAC5BC,SAAS,EAAEH,IAAI,CAACI,UAAU;UAC1BC,QAAQ,EAAEL,IAAI,CAACM;QACjB,CAAC,CAAC;MACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;MAC1B,CAAC,CAAC;IACN;IAEAjB,SAAS,EAAE;EAEb,CAAC,EAAE,EAAE,CAAC;EAENrB,SAAS,CAAC,MAAM;IACdoC,OAAO,CAACC,GAAG,CAACnB,QAAQ,CAAC;IACrBkB,OAAO,CAACC,GAAG,CAACnB,QAAQ,CAACY,SAAS,CAAC;EACjC,CAAC,EAAE,CAACZ,QAAQ,CAAC,CAAC;EAEd,oBACE,QAAC,aAAa;IAAC,KAAK,EAAEV,KAAM;IAAA,wBAC1B;MAAA,uBACE,QAAC,MAAM;QACL,KAAK,EAAE;UAAE+B,OAAO,EAAE;QAAO,CAAE;QAC3B,OAAO,EAAC,WAAW;QACnB,KAAK,EAAC,SAAS;QACf,OAAO,EAAEnB,SAAU;QACnB,SAAS,EAAC,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IACA;MAAA;MAAA;MAAA;IAAA,QACjB,eACN;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACpB;QAAA,UAAIF,QAAQ,CAACY;MAAS;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACvB;EAAA;IAAA;IAAA;IAAA;EAAA,QAmRQ;AAEpB,CAAC;AAAC,GAzUId,WAAW;EAAA,QACEV,WAAW;AAAA;AAAA,KADxBU,WAAW;AA2UjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}