[{"/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/index.js":"1","/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/app.js":"2","/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/completePage.js":"3","/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/adminLogin.js":"4","/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/home.js":"5","/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/adminConsole.js":"6","/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/applicationForm.js":"7","/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/memberLogin.js":"8","/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/successPage.js":"9","/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/graderForm.js":"10","/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/privacyPolicy.js":"11"},{"size":335,"mtime":1672382999418,"results":"12","hashOfConfig":"13"},{"size":1197,"mtime":1674857414081,"results":"14","hashOfConfig":"13"},{"size":1190,"mtime":1672776155489,"results":"15","hashOfConfig":"13"},{"size":2775,"mtime":1675103196758,"results":"16","hashOfConfig":"13"},{"size":3315,"mtime":1674851954579,"results":"17","hashOfConfig":"13"},{"size":22791,"mtime":1675163348096,"results":"18","hashOfConfig":"13"},{"size":22348,"mtime":1675163158595,"results":"19","hashOfConfig":"13"},{"size":2780,"mtime":1672868896152,"results":"20","hashOfConfig":"13"},{"size":2008,"mtime":1674204580605,"results":"21","hashOfConfig":"13"},{"size":21654,"mtime":1674859621731,"results":"22","hashOfConfig":"13"},{"size":1465,"mtime":1672430914388,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},"i18afx",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"28"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/index.js",["65"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './app';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { GoogleOAuthProvider } from '@react-oauth/google';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);",[],"/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/app.js",["66"],[],"import Home from './home';\nimport ApplicationForm from './applicationForm';\nimport GradingInterface from './graderForm';\nimport SuccessPage from './successPage';\nimport CompletionPage from './completePage';\nimport MemberLoginPage from './memberLogin';\nimport AdminLoginPage from './adminLogin';\nimport AdminConsole from './adminConsole';\nimport Privacy from './privacyPolicy';\n\nimport { Routes, Route } from \"react-router-dom\"\n\nfunction App() {\n\n    return (\n        <div className = 'App'>\n            <Routes>\n                <Route path='/' element={<Home/>}/>\n                {/* <Route path='apply' element={<ApplicationForm/>}/> */}\n                <Route path='grading' element={<GradingInterface email=\"\"/>}/>\n                <Route path='success' element={<SuccessPage/>}/>\n                <Route path='complete' element={<CompletionPage/>}/>\n                <Route path='member-login' element={<MemberLoginPage/>}/>\n                <Route path='admin-login' element={<AdminLoginPage/>}/>\n                <Route path='admin' element={<AdminConsole/>}/>\n                <Route path='privacy-policy' element={<Privacy/>}/>\n            </Routes>\n        </div>\n    );\n};\n\nexport default App;","/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/completePage.js",[],[],"/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/adminLogin.js",["67"],[],"import React from \"react\";\nimport { useEffect, useState } from 'react';\nimport \"./styles.css\";\nimport Button from \"@mui/material/Button\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport jwt_decode from \"jwt-decode\";\n\nconst theme = createTheme({\n    status: {\n        danger: '#e53e3e',\n    },\n    palette: {\n        primary: {\n            main: '#ff8a00',\n        },\n        neutral: {\n            main: '#ffffff',\n            contrastText: '#ff8a00',\n        },\n    },\n});\n\nfunction AdminLoginPage() {\n    const navigate = useNavigate();\n    const clientID = \"834809423110-fg16i98bh4h8uvoguvjsf5srrkabvsbq.apps.googleusercontent.com\";\n    const [loginMessage, setMessage] = useState(\"\");\n\n    async function handleResponse(response) {\n        var userObject = jwt_decode(response.credential);\n        const email = userObject.email;\n        await fetch('https://plextech-application-backend-production.up.railway.app/check_admin', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                email: email,\n            })\n        })\n            .then((response) => {\n                return (response.json());\n            })\n            .then((data) => {\n\n                if (data.found === true) {\n                    navigate('/admin', { replace: true, state: { email: email } })\n                }\n                else {\n                    setMessage(\"Login Failed. Please contact the PlexTech executive team if the issue persists.\");\n                }\n            });\n    }\n\n    useEffect(() => {\n        /* global google */\n        google.accounts.id.initialize({\n            client_id: clientID,\n            callback: handleResponse,\n        });\n\n        google.accounts.id.renderButton(\n            document.getElementById('signInDiv'),\n            { theme: \"outline\", size: \"large\" },\n        )\n    }, []);\n\n    return (\n        <>\n            <ThemeProvider theme={theme}>\n                <div className='form-field'>\n                    <div>\n                        <h2>This is an admin-only page.</h2>\n                        <h4>Please log in first to continue.</h4>\n                    </div>\n                    <div id=\"signInDiv\"></div>\n                    <Button style={{ \"display\": \"flex\" }}\n                        variant=\"contained\"\n                        color=\"neutral\"\n                        onClick={() => { navigate('/') }}\n                        className=\"navHome\">Return Home</Button>\n                    <div>\n                        <p>{loginMessage}</p>\n                    </div>\n                </div>\n            </ThemeProvider>\n        </>\n    )\n}\n\nexport default AdminLoginPage;","/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/home.js",["68"],[],"import React from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport Button from '@mui/material/Button';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport PlexTechLogo from './PlexTechLogo.png'\nimport \"./styles.css\"\n\nfunction Home() {\n\n    const navigate = useNavigate();\n\n    const navToApplication = () => {\n        navigate(\"/apply\");\n    }\n\n    const navToGrading = () => {\n        navigate(\"/member-login\");\n    }\n\n    const navToAdmin = () => {\n        navigate(\"/admin-login\");\n    }\n\n    const theme = createTheme({\n        status: {\n            danger: '#e53e3e',\n        },\n        palette: {\n            primary: {\n                main: '#ff8a00',\n            },\n            secondary: {\n                main: '#808080'\n            },\n            neutral: {\n                main: '#ffffff',\n                contrastText: '#ff8a00',\n            },\n        },\n    });\n\n    return (\n        <>\n            <ThemeProvider theme={theme}>\n                <div className=\"home-container\">\n                    <img src={PlexTechLogo} alt=\"plextech logo\" style={{ display: 'block', width: '35px', left: '85%', top: '12%', }} />\n                    <h2 style={{ display: 'block' }}>Welcome to the PlexTech Application Platform!</h2>\n                    {/* <h4>If you are an applicant, please proceed to the application form.</h4> */}\n                    <h4 style={{color: '#ec6f34'}}>Applications are closed for Spring 2023. Thank you for your interest in PlexTech!</h4>\n                    <div className=\"home\">\n\n                        {/* <Button style={{\n                            \"fontFamily\": \"DM Sans\",\n                            \"marginBottom\": \"2rem\",\n                            \"display\": \"block\",\n                        }}\n                            className='first'\n                            onClick={navToApplication}\n                            variant=\"contained\"\n                            color=\"neutral\"\n                        >Application Form</Button> */}\n\n                        <Button style={{\n                            \"fontFamily\": \"DM Sans\",\n                            \"marginBottom\": \"2rem\",\n                            \"display\": \"block\",\n                            \"marginRight\": '0.5%',\n                        }}\n                            className='homeBtn'\n                            onClick={navToGrading}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                        >Grading Interface</Button>\n\n                        <Button style={{\n                            \"fontFamily\": \"DM Sans\",\n                            \"marginBottom\": \"2rem\",\n                            \"display\": \"block\",\n                            \"marginRight\": '0.5%',\n                        }}\n                            className='homeBtn'\n                            onClick={navToAdmin}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                        >Admin Console</Button>\n                    </div>\n                </div>\n            </ThemeProvider>\n            <footer>\n                <p className=\"copyright\">Copyright © 2023 PlexTech All Rights Reserved.</p>\n            </footer>\n        </>\n\n    );\n};\n\nexport default Home;","/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/adminConsole.js",["69"],[],"/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/applicationForm.js",[],[],"/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/memberLogin.js",["70"],[],"import React from \"react\";\nimport { useEffect, useState } from 'react';\nimport \"./styles.css\";\nimport Button from \"@mui/material/Button\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport jwt_decode from \"jwt-decode\";\n\nconst theme = createTheme({\n    status: {\n        danger: '#e53e3e',\n    },\n    palette: {\n        primary: {\n            main: '#ff8a00',\n        },\n        neutral: {\n            main: '#ffffff',\n            contrastText: '#ff8a00',\n        },\n    },\n});\n\nfunction MemberLoginPage() {\n    const navigate = useNavigate();\n    const clientID = \"834809423110-fg16i98bh4h8uvoguvjsf5srrkabvsbq.apps.googleusercontent.com\";\n    const [loginMessage, setMessage] = useState(\"\");\n\n    async function handleResponse(response) {\n        var userObject = jwt_decode(response.credential);\n        const email = userObject.email;\n        await fetch('https://plextech-application-backend-production.up.railway.app/check_grader', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                email: email,\n            })\n        })\n            .then((response) => {\n                return (response.json());\n            })\n            .then((data) => {\n\n                if (data.found === true) {\n                    navigate('/grading', { replace: true, state: { email: email } })\n                }\n                else {\n                    setMessage(\"Login Failed. Please contact the PlexTech executive team if the issue persists.\");\n                }\n            });\n    }\n\n    useEffect(() => {\n        /* global google */\n        google.accounts.id.initialize({\n            client_id: clientID,\n            callback: handleResponse,\n        });\n\n        google.accounts.id.renderButton(\n            document.getElementById('signInDiv'),\n            { theme: \"outline\", size: \"large\" },\n        )\n    }, []);\n\n    return (\n        <>\n            <ThemeProvider theme={theme}>\n                <div className='form-field'>\n                    <div>\n                        <h2>This is a member-only page.</h2>\n                        <h4>Please log in first to continue.</h4>\n                    </div>\n                    <div id=\"signInDiv\"></div>\n                    <Button style={{ \"display\": \"flex\" }}\n                        variant=\"contained\"\n                        color=\"neutral\"\n                        onClick={() => { navigate('/') }}\n                        className=\"navHome\">Return Home</Button>\n                    <div>\n                        <p>{loginMessage}</p>\n                    </div>\n                </div>\n            </ThemeProvider>\n        </>\n    )\n}\n\nexport default MemberLoginPage;","/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/successPage.js",["71"],[],"import React from \"react\";\nimport \"./styles.css\";\nimport Button from \"@mui/material/Button\";\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme({\n    status: {\n        danger: '#e53e3e',\n    },\n    palette: {\n        primary: {\n            main: '#ff8a00',\n        },\n        neutral: {\n            main: '#ffffff',\n            contrastText: '#ff8a00',\n        },\n    },\n});\n\nfunction SuccessPage() {\n\n    const navigate = useNavigate();\n    const { state } = useLocation();\n    const [UID, setUID] = useState('');\n\n    useEffect(() => {\n        if (state === null) {\n            navigate('/apply');\n        } else {\n            if (state.UID === null) {\n                navigate('/apply');\n            } else {\n                setUID(state.UID);\n            }\n        }\n    }, [])\n\n    return (\n        <>\n            <ThemeProvider theme={theme}>\n                <div className='form-field'>\n                    <div>\n                        <h2>Thank you for applying to PlexTech!</h2>\n                        <h4>We will reach out to you very soon.</h4>\n                        <br />\n                        <h3 style={{ 'color': \"black\" }}>Your Applicant ID:</h3>\n                        <h4 style={{ 'color': \"#ff8a00\" }}>{UID}</h4>\n                        <h6>Please keep this ID in a safe place; you will not be able to access it later. <br/> Should you need to contact us regarding your application, please refer to this ID.</h6>\n                    </div>\n                    <br/>\n                    <Button style={{ \"display\": \"flex\" }}\n                        variant=\"contained\"\n                        color=\"neutral\"\n                        onClick={() => { navigate('/') }}\n                        className=\"navHome\">Return Home</Button>\n                </div>\n            </ThemeProvider>\n\n        </>\n    )\n}\n\nexport default SuccessPage;","/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/graderForm.js",["72","73","74"],[],"import React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./styles.css\";\nimport Button from \"@mui/material/Button\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nconst theme = createTheme({\n  status: {\n    danger: \"#e53e3e\",\n  },\n  palette: {\n    primary: {\n      main: \"#ff8a00\",\n    },\n    neutral: {\n      main: \"#ffffff\",\n      contrastText: \"#ff8a00\",\n    },\n  },\n});\n\nconst GraderForm = () => {\n  const navigate = useNavigate();\n  const [userInfo, setData] = useState([{\n    timestamp: \"Loading applicants, please stand by...\",\n    firstName: \"\",\n    lastName: \"\",\n    resume: \"\",\n    answer1: \"\",\n    answer2: \"\",\n    commitments: \"\",\n    year: \"\",\n    major: \"\",\n    gender: \"\",\n    linkedin: \"N/A\",\n    website: \"N/A\",\n    race: \"\",\n  }]);\n\n  const [resCommit, setResCommit] = useState(\"1\");\n  const [resLead, setResLead] = useState(\"1\");\n  const [resTech, setResTech] = useState(\"1\");\n\n  const [initiative, setInitiative] = useState(\"1\");\n  const [problem, setProblem] = useState(\"1\");\n  const [ansCommit, setAnsCommit] = useState(\"1\");\n  const [impact, setImpact] = useState(\"1\");\n  const [passion, setPassion] = useState(\"1\");\n  const [excellence, setExcellence] = useState(\"1\");\n  const [commitment, setcommitment] = useState(\"1\");\n\n  const [comment0, setComment0] = useState('');\n  const [comment1, setComment1] = useState('');\n  const [comment2, setComment2] = useState('');\n  const [comment3, setComment3] = useState('');\n  const [comment4, setComment4] = useState('');\n  const [loadingMessage, setLoading] = useState('');\n\n  const navToHome = () => {\n    navigate(\"/\");\n  };\n\n  const { state } = useLocation();\n\n  //Load Applicant Data\n  async function fetchData() {\n    let url = \"https://plextech-application-backend-production.up.railway.app/get_applicant/\" + state.email\n    await fetch(url, {\n      method: 'GET',\n    })\n      .then((response) => {\n        return (response.json());\n      })\n      .then((data) => {\n\n        function base64ToArrayBuffer(data) {\n          var binaryString = window.atob(data);\n          var binaryLen = binaryString.length;\n          var byteArray = new Uint8Array(binaryLen);\n          for (var i = 0; i < binaryLen; i++) {\n            var ascii = binaryString.charCodeAt(i);\n            byteArray[i] = ascii;\n          }\n          return byteArray;\n        };\n\n        const applicantData = []\n        if (data.length === 0) {\n          navigate('/complete')\n        }\n\n        for (let applicant of data) {\n          var arrayBuffer = base64ToArrayBuffer(applicant.resume.slice(28));\n          const blob = new Blob([arrayBuffer], { type: 'application/pdf' });\n          const resumeURL = URL.createObjectURL(blob);\n\n          applicantData.push({\n            timestamp: applicant.time_created,\n            firstName: applicant.first_name,\n            lastName: applicant.last_name,\n            resume: resumeURL,\n            roles: applicant.desired_roles,\n            answer1: applicant.answer1,\n            answer2: applicant.answer2,\n            answer3: applicant.answer3,\n            commitments: applicant.commitments,\n            year: applicant.year,\n            major: applicant.major,\n            gender: applicant.gender,\n            race: applicant.race,\n            linkedin: applicant.linkedin,\n            website: applicant.website,\n          })\n        }\n        setData(applicantData);\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  }\n\n  //Mounting Calls\n  useEffect(() => {\n\n    //Authentication Check\n    async function checkUser(value) {\n      await fetch('https://plextech-application-backend-production.up.railway.app/check_grader', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          email: value.email,\n        })\n      })\n        .then((response) => {\n          return (response.json());\n        })\n        .then((data) => {\n          if (data.found === false) {\n            navigate('/member-login');\n          }\n        });\n    };\n\n    if (state === null) {\n      navigate('/member-login');\n    } else {\n      checkUser(state);\n    }\n\n    fetchData();\n    setLoading('');\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className='form-field'>\n        <Formik\n          initialValues={{\n            timestamp: userInfo[0].timestamp,\n            firstName: userInfo[0].firstName,\n            lastName: userInfo[0].lastName,\n            resume: userInfo[0].resumeURL,\n            roles: JSON.stringify(userInfo[0].roles),\n            answer1: userInfo[0].answer1,\n            answer2: userInfo[0].answer2,\n            answer3: userInfo[0].answer3,\n            commitments: userInfo[0].commitments,\n            major: userInfo[0].major,\n            year: userInfo[0].year,\n            gender: userInfo[0].gender,\n          }}\n          onSubmit={async () => {\n            setLoading('Submitting your application; please wait...');\n            await fetch('https://plextech-application-backend-production.up.railway.app/add_review', {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({\n\n                grader: state.email,\n                comment0: comment0,\n                resCommit: resCommit,\n                resLead: resLead,\n                resTech: resTech,\n                comment1: comment1,\n                initiative: initiative,\n                problem: problem,\n                comemnt2: comment2,\n                ansCommit: ansCommit,\n                impact: impact,\n                comment3: comment3,\n                passion: passion,\n                excellence: excellence,\n                comment4: comment4,\n                commitment: commitment,\n                applicantID: userInfo[0].timestamp,\n              }),\n            })\n              .then(() => {\n                let newData = userInfo;\n                newData.shift();\n                if (newData.length === 0) {\n                  navigate('/complete')\n                }\n                setData(newData);\n                window.scrollTo(0, 0);\n\n                setResCommit('1');\n                setResLead('1');\n                setResTech('1');\n                setInitiative('1');\n                setProblem('1');\n                setAnsCommit('1');\n                setImpact('1');\n                setPassion('1');\n                setExcellence('1');\n                setcommitment('1');\n                setComment0('');\n                setComment1('');\n                setComment2('');\n                setComment3('');\n                setComment4('');\n              });\n          }}\n        >\n          {(formik) => (\n            <div>\n              <span>\n                <Button\n                  style={{ display: \"flex\" }}\n                  variant=\"contained\"\n                  color=\"neutral\"\n                  onClick={navToHome}\n                  className=\"navHome\"\n                >Return Home</Button>\n\n                <h1 style={{ display: \"flex\" }}>\n                  PlexTech Grader Portal\n                </h1>\n              </span>\n\n              <div>\n                <h4>\n                  For each applicant, please provide the corresponding ratings and leave concise\n                  comments for every response.\n                </h4>\n\n                <form onSubmit={formik.handleSubmit}>\n\n                  <label htmlFor=\"timestamp\">Applicant ID</label>\n                  <div className=\"horizontal-box\">\n                    <p>{typeof userInfo[0].timestamp != typeof undefined ? userInfo[0].timestamp : 'N/A'}</p>\n                  </div>\n\n                  <label htmlFor=\"firstName\">First Name</label>\n                  <div className=\"horizontal-box\">\n                    <p>{userInfo[0].firstName}</p>\n                  </div>\n\n                  <label htmlFor=\"lastName\">Last Name</label>\n                  <div className=\"horizontal-box\">\n                    <p>{userInfo[0].lastName}</p>\n                  </div>\n\n                  <label htmlFor=\"graduationYear\">Graduation Year</label>\n                  <div className=\"horizontal-box\">\n                    <p>{userInfo[0].year}</p>\n                  </div>\n\n                  <label htmlFor=\"major\">Major</label>\n                  <div className=\"horizontal-box\">\n                    <p>{userInfo[0].major}</p>\n                  </div>\n\n                  <label htmlFor=\"gender\">Gender</label>\n                  <div className=\"horizontal-box\">\n                    <p>{userInfo[0].gender}</p>\n                  </div>\n\n                  <label htmlFor=\"race\">Demographics</label>\n                  <div className=\"horizontal-box\">\n                    <p>{typeof userInfo[0].race != typeof undefined ? userInfo[0].race : 'N/A'}</p>\n                  </div>\n\n                  <label htmlFor=\"website\">Personal Website</label>\n                  <div className=\"horizontal-box\">\n                    <p>{typeof userInfo[0].website != typeof undefined ? userInfo[0].website : 'None'}</p>\n                  </div>\n\n                  <label htmlFor=\"linkedin\">LinkedIn</label>\n                  <div className=\"horizontal-box\">\n                    <p>{typeof userInfo[0].linkedin != typeof undefined ? userInfo[0].linkedin : 'None'}</p>\n                  </div>\n\n                  <label htmlFor=\"roles\">Desired roles</label>\n                  <div className=\"horizontal-box\">\n                    <p>{typeof userInfo[0].roles != typeof undefined ? userInfo[0].roles.toString() : \"Member\"}</p>\n                  </div>\n\n                  <h4 style={{color: '#ec6f34'}}>Resume/CV</h4>\n\n                  {/* Resume */}\n                  <div className=\"horizontal-box\">\n                    <iframe src={userInfo[0].resume} />\n                    <label htmlFor=\"comment0\">Comment</label>\n                    <textarea\n                      className=\"commentHeight\"\n                      id=\"comment0\"\n                      type=\"text\"\n                      wrap=\"soft\"\n                      value={comment0}\n                      onChange={(event) => { setComment0(event.target.value) }}\n                    />\n\n                    <label htmlFor=\"resCom\">\n                      Do experiences in the applicant's resume exhibit consistency and commitment?\n                    </label>\n                    <select className=\"dropbtn\" name=\"resCommit\" value={resCommit} onChange={(event) => { setResCommit(event.target.value) }}>\n                      <option value=\"\" disabled={true}>Choose a rating:</option>\n                      <option value={1}>1 (Not at all)</option>\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                      <option value={5}>5 (A perfect amount)</option>\n                    </select>\n\n                    <label htmlFor=\"res\">\n                      What quality of leadership experiences does the applicant's resume display?\n                    </label>\n                    <select className=\"dropbtn\" name=\"resLead\" value={resLead} onChange={(event) => { setResLead(event.target.value) }}>\n                      <option value=\"\" disabled={true}>Choose a rating:</option>\n                      <option value={1}>1 (No leadership experience)</option>\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                      <option value={5}>5 (Major leadership experiences)</option>\n                    </select>\n\n                    <label htmlFor=\"res\">\n                      What kind of technical experience (don't need to be CS-related: bio, engineering, math, etc.) does the applicant's resume display?\n                    </label>\n                    <select className=\"dropbtn\" name=\"resTech\" value={resTech} onChange={(event) => { setResTech(event.target.value) }}>\n                      <option value=\"\" disabled={true}>Choose a rating:</option>\n                      <option value={1}>1 (No technical experience)</option>\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                      <option value={5}>5 (Significant technical experiences)</option>\n                    </select>\n                  </div>\n\n                  <br/>\n                  <br/>\n\n                  {/* Essay Question 1 */}\n                  <div className=\"horizontal-box\">\n                    <h4 style={{color: '#ec6f34'}}>Question 1</h4>\n                    <label htmlFor=\"answer1\">\n                      Describe how you have taken advantage of a significant opportunity or worked to overcome a barrier you have faced.\n                    </label>\n                    <p>{userInfo[0].answer1}</p>\n\n                    <label htmlFor=\"comment1\">Comment</label>\n\n                    <textarea\n                      className=\"commentHeight\"\n                      id=\"comment1\"\n                      type=\"text\"\n                      wrap=\"soft\"\n                      value={comment1}\n                      onChange={(event) => { setComment1(event.target.value) }}\n                    />\n\n                    <label htmlFor=\"res\">\n                      How well does the applicant demonstrate their ability to take on initiatives?\n                    </label>\n                    <select className=\"dropbtn\" name=\"initiative\" value={initiative} onChange={(event) => { setInitiative(event.target.value) }}>\n                      <option value=\"\" disabled={true}>Choose a rating:</option>\n                      <option value={1}>1 (No trace at all)</option>\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                      <option value={5}>5 (Clear signs of unique initiatives taken)</option>\n                    </select>\n\n                    <label htmlFor=\"res\">\n                      How well does the applicant demonstrate their problem-solving abilities?\n                    </label>\n                    <select className=\"dropbtn\" name=\"problem\" value={problem} onChange={(event) => { setProblem(event.target.value) }}>\n                      <option value=\"\" disabled={true}>Choose a rating:</option>\n                      <option value={1}>1 (No trace at all)</option>\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                      <option value={5}>5 (Clear, impressive description of problem-solving processes)</option>\n                    </select>\n                  </div>\n\n                  <br/>\n                  <br/>\n\n                  {/* Essay Question 2 */}\n                  <div className=\"horizontal-box\">\n                    <h4 style={{color: '#ec6f34'}}>Question 2</h4>\n                    <label htmlFor=\"essay2\">\n                      Tell us about a community that’s especially important to you: how did you contribute to this community, and what makes it so inspiring?\n                    </label>\n                    <p>{userInfo[0].answer2}</p>\n\n                    <label htmlFor=\"comment2\">Comment</label>\n                    <textarea\n                      className=\"commentHeight\"\n                      id=\"comment2\"\n                      type=\"text\"\n                      wrap=\"soft\"\n                      value={comment2}\n                      onChange={(event) => { setComment2(event.target.value) }}\n                    />\n\n                    <label htmlFor=\"answer2Rating\">\n                      How well does the applicant demonstrate their ability to commit to a community? \n                    </label>\n                    <select className=\"dropbtn\" name=\"commitment\" value={ansCommit} onChange={(event) => { setAnsCommit(event.target.value) }}>\n                      <option value=\"\" disabled={true}>Choose a rating:</option>\n                      <option value={1}>1 (Not at all)</option>\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                      <option value={5}>5 (Exhibiting strong willingness to commit to a community)</option>\n                    </select>\n\n                    <label htmlFor=\"answer2Rating\">\n                      To what extent has the applicant impacted their community? \n                    </label>\n                    <select className=\"dropbtn\" name=\"impact\" value={impact} onChange={(event) => { setImpact(event.target.value) }}>\n                      <option value=\"\" disabled={true}>Choose a rating:</option>\n                      <option value={1}>1 (No sign at all)</option>\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                      <option value={5}>5 (Significant impacts to the community)</option>\n                    </select>\n                  </div>\n\n                  <br/>\n                  <br/>\n\n                  {/* Essay Question 3 */}\n                  <div className=\"horizontal-box\">\n                    <h4 style={{color: '#ec6f34'}}>Question 3</h4>\n                    <label htmlFor=\"essay3\">\n                      Tell us about a technical (not necessarily CS-related; could be robotics, graphic design, etc.) project you’ve worked on in the past.\n                    </label>\n                    <p>{userInfo[0].answer3}</p>\n\n                    <label htmlFor=\"comment3\">Comment</label>\n                    <textarea\n                      className=\"commentHeight\"\n                      id=\"comment3\"\n                      type=\"text\"\n                      wrap=\"soft\"\n                      value={comment3}\n                      onChange={(event) => { setComment3(event.target.value) }}\n                    />\n\n                    <label htmlFor=\"answer3Rating\">\n                      How well does the applicant exhibit a sense of passion for learning and solving problems?\n                    </label>\n                    <select className=\"dropbtn\" name=\"passion\" value={passion} onChange={(event) => { setPassion(event.target.value) }}>\n                      <option value=\"\" disabled={true}>Choose a rating:</option>\n                      <option value={1}>1 (No sign at all)</option>\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                      <option value={5}>5 (An avid passion is exhibited)</option>\n                    </select>\n\n                    <label htmlFor=\"answer3Rating\">\n                      To what extent did the applicant go above and beyond in their project? \n                    </label>\n                    <select className=\"dropbtn\" name=\"passion\" value={excellence} onChange={(event) => { setExcellence(event.target.value) }}>\n                      <option value=\"\" disabled={true}>Choose a rating:</option>\n                      <option value={1}>1 (No sign at all)</option>\n                      <option value={2}>2</option>\n                      <option value={3}>3</option>\n                      <option value={4}>4</option>\n                      <option value={5}>5 (Impressive excellence is shown)</option>\n                    </select>\n                  </div>\n\n                  <br/>\n                  <br/>\n\n                  {/* Time Commitments */}\n                  <div className=\"horizontal-box\">\n                    <h4 style={{color: '#ec6f34'}}>Time Commitments</h4>\n                    <p>{userInfo[0].commitments}</p>\n\n                    <label htmlFor=\"comment4\">Comment</label>\n                    <textarea\n                      className=\"commentHeight\"\n                      id=\"comment4\"\n                      type=\"text\"\n                      wrap=\"soft\"\n                      value={comment4}\n                      onChange={(event) => { setComment4(event.target.value) }}\n                    />\n\n                    <label htmlFor=\"commitment\">\n                      Do the applicant's commitments seem concerning (WAY too many clubs, insane unit count, etc.)?\n                    </label>\n                    <select className=\"dropbtn\" name=\"commitment\" value={commitment} onChange={(event) => { setcommitment(event.target.value) }}>\n                      <option value=\"\" disabled={true}>Choose a rating:</option>\n                      <option value={3}>Not at all</option>\n                      <option value={2}>Could be a problem</option>\n                      <option value={1}>RED FLAG</option>\n                    </select>\n                  </div>\n\n                  {/* Submit Button */}\n                  <div className='horizontal-box'>\n                    <Button\n                      type=\"submit\"\n                      variant=\"contained\"\n                      color=\"neutral\"\n                      fontWeight=\"Bold\"\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                  <p>{loadingMessage}</p>\n                </form>\n              </div>\n            </div>\n          )\n          }\n        </Formik >\n      </div >\n      <br />\n    </ThemeProvider >\n  );\n};\n\nexport default GraderForm;\n","/Users/bradl/Desktop/Berkeley/Fall_2022/PlexTech/Frontend/src/privacyPolicy.js",[],[],{"ruleId":"75","severity":1,"message":"76","line":5,"column":10,"nodeType":"77","messageId":"78","endLine":5,"endColumn":29},{"ruleId":"75","severity":1,"message":"79","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":64,"column":8,"nodeType":"82","endLine":64,"endColumn":10,"suggestions":"83"},{"ruleId":"75","severity":1,"message":"84","line":12,"column":11,"nodeType":"77","messageId":"78","endLine":12,"endColumn":27},{"ruleId":"80","severity":1,"message":"85","line":96,"column":8,"nodeType":"82","endLine":96,"endColumn":10,"suggestions":"86"},{"ruleId":"80","severity":1,"message":"81","line":64,"column":8,"nodeType":"82","endLine":64,"endColumn":10,"suggestions":"87"},{"ruleId":"80","severity":1,"message":"88","line":39,"column":8,"nodeType":"82","endLine":39,"endColumn":10,"suggestions":"89"},{"ruleId":"75","severity":1,"message":"90","line":3,"column":13,"nodeType":"77","messageId":"78","endLine":3,"endColumn":16},{"ruleId":"80","severity":1,"message":"91","line":154,"column":6,"nodeType":"82","endLine":154,"endColumn":8,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":305,"column":21,"nodeType":"95","endLine":305,"endColumn":56},"no-unused-vars","'GoogleOAuthProvider' is defined but never used.","Identifier","unusedVar","'ApplicationForm' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleResponse'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'navToApplication' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadResultAnalytics', 'navigate', and 'state'. Either include them or remove the dependency array.",["97"],["98"],"React Hook useEffect has missing dependencies: 'navigate' and 'state'. Either include them or remove the dependency array.",["99"],"'Yup' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchData', 'navigate', and 'state'. Either include them or remove the dependency array.",["100"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"101","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [handleResponse]",{"range":"110","text":"111"},"Update the dependencies array to be: [loadResultAnalytics, navigate, state]",{"range":"112","text":"113"},{"range":"114","text":"111"},"Update the dependencies array to be: [navigate, state]",{"range":"115","text":"116"},"Update the dependencies array to be: [fetchData, navigate, state]",{"range":"117","text":"118"},[1964,1966],"[handleResponse]",[2906,2908],"[loadResultAnalytics, navigate, state]",[1968,1970],[927,929],"[navigate, state]",[4314,4316],"[fetchData, navigate, state]"]